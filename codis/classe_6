### Llibreries a instal·lar #################
# pip install beautifulsoup4                #
# pip install requests                      #
# pip install spotipy                       #
# pip install lxml                          #
# pip install openpyxl                      #

import requests
from bs4 import BeautifulSoup
import pandas as pd
import time
import glob
import spotipy
import json

SPOTIPY_CLIENT_ID="b486662ed48c495ea920f68349468d18"
SPOTIPY_CLIENT_SECRET="a1da923f2c2d4882b3fab9cd0c0ca44b"
from spotipy.oauth2 import SpotifyClientCredentials

# Generamos el autenticador
auth_manager = SpotifyClientCredentials(SPOTIPY_CLIENT_ID, SPOTIPY_CLIENT_SECRET)
sp = spotipy.Spotify(auth_manager=auth_manager)

range = range(2000,2024, 1)
def extract_wiki(range):
    for r in range:
        try:
            resposta = requests.get(f"https://es.wikipedia.org/wiki/Festival_de_la_Canci%C3%B3n_de_Eurovisi%C3%B3n_{r}")
            codi_web = (resposta.text)

            soup = BeautifulSoup(codi_web, 'html.parser')
            final = soup.find('span', id="Final")
            tabla = final.find_next("table")
            df = pd.read_html(str(tabla))[0]
            print(df)
            df.to_excel(f"final-{r}.xlsx", index=False)
            print(f"Todo bien en {r}")
            time.sleep(1)
        except AttributeError:
            print(f"Problemas in {r}")

# extract_wiki(range)

def juntar():
    files = glob.glob("*.xlsx")
    print(files)

    llista_dfs = []
    for f in files:
        df = pd.read_excel(f)
        any = f.split("-")[1].split(".")[0]
        df["año"] = any
        df.columns.values[0] = "N."
        df.columns.values[2] = "cantante"
        df.columns.values[5] = "Puntos"

        llista_dfs.append(df)

    final_df = pd.concat(llista_dfs)
    final_df.to_excel("finish.xlsx", index=False)
    print(final_df)

#juntar
df=pd.read_excel("finish.xlsx")
print(df)

for index,row in df.iterrows():
    cantant = row["cantante"]
    song = row["Canción"]
    año = row["año"]
    q = f"{song} {cantant} Eurovision"
    print(q)
    resposta = sp.search(q, limit=10, offset=0, type="track", market=None)
    resposta["query"] = q

    with open('data.json', 'w', encoding='utf-8') as f:
        json.dump(resposta, f, ensure_ascii=False, indent=4)
    print("Fet!")
    time.sleep(15)
